/*
 * Hangar API
 * This page describes the format for the current Hangar REST API as well as general usage guidelines.<br> Note that all routes **not** listed here should be considered **internal**, and can change at a moment's notice. **Do not use them**.  ## Authentication and Authorization There are two ways to consume the API: Authenticated or anonymous.  ### Anonymous When using anonymous authentication, you only have access to public information, but you don't need to worry about creating and storing an API key or handing JWTs.  ### Authenticated If you need access to non-public content or actions, you need to create and use API keys. These can be created by going to the API keys page via the profile dropdown or by going to your user page and clicking on the key icon.  API keys allow you to impersonate yourself, so they should be handled like passwords. **Do not share them with anyone else!**  #### Getting and Using a JWT Once you have an API key, you need to authenticate yourself: Send a `POST` request with your API key identifier to `/api/v1/authenticate?apiKey=yourKey`. The response will contain your JWT as well as an expiration time. Put this JWT into the `Authorization` header of every request and make sure to request a new JWT after the expiration time has passed.  Please also set a meaningful `User-Agent` header. This allows us to better identify loads and needs for potentially new endpoints.  ## Misc ### Date Formats Standard ISO types. Where possible, we use the [OpenAPI format modifier](https://swagger.io/docs/specification/data-models/data-types/#format).  ### Rate Limits and Caching The default rate limit is set at 20 requests every 5 seconds with an initial overdraft for extra leniency. Individual endpoints, such as version creation, may have stricter rate limiting.  If applicable, always cache responses. The Hangar API itself is cached by CloudFlare and internally.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bentzin.hangar.api.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import de.bentzin.hangar.api.client.JSON;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;
import java.util.Map.Entry;

/**
 * Version
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-27T18:55:17.902236655+01:00[Europe/Berlin]")
public class Version {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private Visibility visibility;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private VersionStats stats;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_REVIEW_STATE = "reviewState";
  @SerializedName(SERIALIZED_NAME_REVIEW_STATE)
  private ReviewState reviewState;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private ProjectChannel channel;

  public static final String SERIALIZED_NAME_PINNED_STATUS = "pinnedStatus";
  @SerializedName(SERIALIZED_NAME_PINNED_STATUS)
  private PinnedStatus pinnedStatus;

  public static final String SERIALIZED_NAME_DOWNLOADS = "downloads";
  @SerializedName(SERIALIZED_NAME_DOWNLOADS)
  private Map<String, PlatformVersionDownload> downloads = null;

  public static final String SERIALIZED_NAME_POST_ID = "postId";
  @SerializedName(SERIALIZED_NAME_POST_ID)
  private Long postId;

  public static final String SERIALIZED_NAME_PLUGIN_DEPENDENCIES = "pluginDependencies";
  @SerializedName(SERIALIZED_NAME_PLUGIN_DEPENDENCIES)
  private Map<String, Set<PluginDependency>> pluginDependencies = null;

  public static final String SERIALIZED_NAME_PLATFORM_DEPENDENCIES = "platformDependencies";
  @SerializedName(SERIALIZED_NAME_PLATFORM_DEPENDENCIES)
  private Map<String, Set<String>> platformDependencies = null;

  public static final String SERIALIZED_NAME_PLATFORM_DEPENDENCIES_FORMATTED = "platformDependenciesFormatted";
  @SerializedName(SERIALIZED_NAME_PLATFORM_DEPENDENCIES_FORMATTED)
  private Map<String, String> platformDependenciesFormatted = null;

  public Version() {
  }

  public Version createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Version name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Version visibility(Visibility visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Visibility getVisibility() {
    return visibility;
  }


  public void setVisibility(Visibility visibility) {
    this.visibility = visibility;
  }


  public Version description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Version stats(VersionStats stats) {
    
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public VersionStats getStats() {
    return stats;
  }


  public void setStats(VersionStats stats) {
    this.stats = stats;
  }


  public Version author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * Get author
   * @return author
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    this.author = author;
  }


  public Version reviewState(ReviewState reviewState) {
    
    this.reviewState = reviewState;
    return this;
  }

   /**
   * Get reviewState
   * @return reviewState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReviewState getReviewState() {
    return reviewState;
  }


  public void setReviewState(ReviewState reviewState) {
    this.reviewState = reviewState;
  }


  public Version channel(ProjectChannel channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectChannel getChannel() {
    return channel;
  }


  public void setChannel(ProjectChannel channel) {
    this.channel = channel;
  }


  public Version pinnedStatus(PinnedStatus pinnedStatus) {
    
    this.pinnedStatus = pinnedStatus;
    return this;
  }

   /**
   * Get pinnedStatus
   * @return pinnedStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PinnedStatus getPinnedStatus() {
    return pinnedStatus;
  }


  public void setPinnedStatus(PinnedStatus pinnedStatus) {
    this.pinnedStatus = pinnedStatus;
  }


  public Version downloads(Map<String, PlatformVersionDownload> downloads) {
    
    this.downloads = downloads;
    return this;
  }

  public Version putDownloadsItem(String key, PlatformVersionDownload downloadsItem) {
    if (this.downloads == null) {
      this.downloads = new HashMap<>();
    }
    this.downloads.put(key, downloadsItem);
    return this;
  }

   /**
   * Get downloads
   * @return downloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, PlatformVersionDownload> getDownloads() {
    return downloads;
  }


  public void setDownloads(Map<String, PlatformVersionDownload> downloads) {
    this.downloads = downloads;
  }


  public Version postId(Long postId) {
    
    this.postId = postId;
    return this;
  }

   /**
   * Get postId
   * @return postId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getPostId() {
    return postId;
  }


  public void setPostId(Long postId) {
    this.postId = postId;
  }


  public Version pluginDependencies(Map<String, Set<PluginDependency>> pluginDependencies) {
    
    this.pluginDependencies = pluginDependencies;
    return this;
  }

  public Version putPluginDependenciesItem(String key, Set<PluginDependency> pluginDependenciesItem) {
    if (this.pluginDependencies == null) {
      this.pluginDependencies = new HashMap<>();
    }
    this.pluginDependencies.put(key, pluginDependenciesItem);
    return this;
  }

   /**
   * Get pluginDependencies
   * @return pluginDependencies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Set<PluginDependency>> getPluginDependencies() {
    return pluginDependencies;
  }


  public void setPluginDependencies(Map<String, Set<PluginDependency>> pluginDependencies) {
    this.pluginDependencies = pluginDependencies;
  }


  public Version platformDependencies(Map<String, Set<String>> platformDependencies) {
    
    this.platformDependencies = platformDependencies;
    return this;
  }

  public Version putPlatformDependenciesItem(String key, Set<String> platformDependenciesItem) {
    if (this.platformDependencies == null) {
      this.platformDependencies = new HashMap<>();
    }
    this.platformDependencies.put(key, platformDependenciesItem);
    return this;
  }

   /**
   * Get platformDependencies
   * @return platformDependencies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Set<String>> getPlatformDependencies() {
    return platformDependencies;
  }


  public void setPlatformDependencies(Map<String, Set<String>> platformDependencies) {
    this.platformDependencies = platformDependencies;
  }


  public Version platformDependenciesFormatted(Map<String, String> platformDependenciesFormatted) {
    
    this.platformDependenciesFormatted = platformDependenciesFormatted;
    return this;
  }

  public Version putPlatformDependenciesFormattedItem(String key, String platformDependenciesFormattedItem) {
    if (this.platformDependenciesFormatted == null) {
      this.platformDependenciesFormatted = new HashMap<>();
    }
    this.platformDependenciesFormatted.put(key, platformDependenciesFormattedItem);
    return this;
  }

   /**
   * Get platformDependenciesFormatted
   * @return platformDependenciesFormatted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getPlatformDependenciesFormatted() {
    return platformDependenciesFormatted;
  }


  public void setPlatformDependenciesFormatted(Map<String, String> platformDependenciesFormatted) {
    this.platformDependenciesFormatted = platformDependenciesFormatted;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Version version = (Version) o;
    return Objects.equals(this.createdAt, version.createdAt) &&
        Objects.equals(this.name, version.name) &&
        Objects.equals(this.visibility, version.visibility) &&
        Objects.equals(this.description, version.description) &&
        Objects.equals(this.stats, version.stats) &&
        Objects.equals(this.author, version.author) &&
        Objects.equals(this.reviewState, version.reviewState) &&
        Objects.equals(this.channel, version.channel) &&
        Objects.equals(this.pinnedStatus, version.pinnedStatus) &&
        Objects.equals(this.downloads, version.downloads) &&
        Objects.equals(this.postId, version.postId) &&
        Objects.equals(this.pluginDependencies, version.pluginDependencies) &&
        Objects.equals(this.platformDependencies, version.platformDependencies) &&
        Objects.equals(this.platformDependenciesFormatted, version.platformDependenciesFormatted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, name, visibility, description, stats, author, reviewState, channel, pinnedStatus, downloads, postId, pluginDependencies, platformDependencies, platformDependenciesFormatted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Version {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    reviewState: ").append(toIndentedString(reviewState)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    pinnedStatus: ").append(toIndentedString(pinnedStatus)).append("\n");
    sb.append("    downloads: ").append(toIndentedString(downloads)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    pluginDependencies: ").append(toIndentedString(pluginDependencies)).append("\n");
    sb.append("    platformDependencies: ").append(toIndentedString(platformDependencies)).append("\n");
    sb.append("    platformDependenciesFormatted: ").append(toIndentedString(platformDependenciesFormatted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdAt");
    openapiFields.add("name");
    openapiFields.add("visibility");
    openapiFields.add("description");
    openapiFields.add("stats");
    openapiFields.add("author");
    openapiFields.add("reviewState");
    openapiFields.add("channel");
    openapiFields.add("pinnedStatus");
    openapiFields.add("downloads");
    openapiFields.add("postId");
    openapiFields.add("pluginDependencies");
    openapiFields.add("platformDependencies");
    openapiFields.add("platformDependenciesFormatted");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Version
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Version.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Version is not found in the empty JSON string", Version.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Version.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Version` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `stats`
      if (jsonObj.get("stats") != null && !jsonObj.get("stats").isJsonNull()) {
        VersionStats.validateJsonObject(jsonObj.getAsJsonObject("stats"));
      }
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      // validate the optional field `channel`
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) {
        ProjectChannel.validateJsonObject(jsonObj.getAsJsonObject("channel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Version.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Version' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Version> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Version.class));

       return (TypeAdapter<T>) new TypeAdapter<Version>() {
           @Override
           public void write(JsonWriter out, Version value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Version read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Version given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Version
  * @throws IOException if the JSON string is invalid with respect to Version
  */
  public static Version fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Version.class);
  }

 /**
  * Convert an instance of Version to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

