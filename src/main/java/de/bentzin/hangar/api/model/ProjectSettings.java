/*
 * Hangar API
 * This page describes the format for the current Hangar REST API as well as general usage guidelines.<br> Note that all routes **not** listed here should be considered **internal**, and can change at a moment's notice. **Do not use them**.  ## Authentication and Authorization There are two ways to consume the API: Authenticated or anonymous.  ### Anonymous When using anonymous authentication, you only have access to public information, but you don't need to worry about creating and storing an API key or handing JWTs.  ### Authenticated If you need access to non-public content or actions, you need to create and use API keys. These can be created by going to the API keys page via the profile dropdown or by going to your user page and clicking on the key icon.  API keys allow you to impersonate yourself, so they should be handled like passwords. **Do not share them with anyone else!**  #### Getting and Using a JWT Once you have an API key, you need to authenticate yourself: Send a `POST` request with your API key identifier to `/api/v1/authenticate?apiKey=yourKey`. The response will contain your JWT as well as an expiration time. Put this JWT into the `Authorization` header of every request and make sure to request a new JWT after the expiration time has passed.  Please also set a meaningful `User-Agent` header. This allows us to better identify loads and needs for potentially new endpoints.  ## Misc ### Date Formats Standard ISO types. Where possible, we use the [OpenAPI format modifier](https://swagger.io/docs/specification/data-models/data-types/#format).  ### Rate Limits and Caching The default rate limit is set at 20 requests every 5 seconds with an initial overdraft for extra leniency. Individual endpoints, such as version creation, may have stricter rate limiting.  If applicable, always cache responses. The Hangar API itself is cached by CloudFlare and internally.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bentzin.hangar.api.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ProjectSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-28T17:51:10.536335800+01:00[Europe/Berlin]")
public class ProjectSettings {
  public static final String SERIALIZED_NAME_HOMEPAGE = "homepage";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE)
  private String homepage;

  public static final String SERIALIZED_NAME_ISSUES = "issues";
  @SerializedName(SERIALIZED_NAME_ISSUES)
  private String issues;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_SUPPORT = "support";
  @SerializedName(SERIALIZED_NAME_SUPPORT)
  private String support;

  public static final String SERIALIZED_NAME_WIKI = "wiki";
  @SerializedName(SERIALIZED_NAME_WIKI)
  private String wiki;

  public static final String SERIALIZED_NAME_LICENSE = "license";
  @SerializedName(SERIALIZED_NAME_LICENSE)
  private ProjectLicense license;

  public static final String SERIALIZED_NAME_DONATION = "donation";
  @SerializedName(SERIALIZED_NAME_DONATION)
  private ProjectDonationSettings donation;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<String> keywords = new ArrayList<String>();

  public static final String SERIALIZED_NAME_FORUM_SYNC = "forumSync";
  @SerializedName(SERIALIZED_NAME_FORUM_SYNC)
  private Boolean forumSync;

  public static final String SERIALIZED_NAME_SPONSORS = "sponsors";
  @SerializedName(SERIALIZED_NAME_SPONSORS)
  private String sponsors;


  public ProjectSettings homepage(String homepage) {
    
    this.homepage = homepage;
    return this;
  }

   /**
   * Get homepage
   * @return homepage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomepage() {
    return homepage;
  }


  public void setHomepage(String homepage) {
    this.homepage = homepage;
  }


  public ProjectSettings issues(String issues) {
    
    this.issues = issues;
    return this;
  }

   /**
   * Get issues
   * @return issues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssues() {
    return issues;
  }


  public void setIssues(String issues) {
    this.issues = issues;
  }


  public ProjectSettings source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    this.source = source;
  }


  public ProjectSettings support(String support) {
    
    this.support = support;
    return this;
  }

   /**
   * Get support
   * @return support
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupport() {
    return support;
  }


  public void setSupport(String support) {
    this.support = support;
  }


  public ProjectSettings wiki(String wiki) {
    
    this.wiki = wiki;
    return this;
  }

   /**
   * Get wiki
   * @return wiki
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWiki() {
    return wiki;
  }


  public void setWiki(String wiki) {
    this.wiki = wiki;
  }


  public ProjectSettings license(ProjectLicense license) {
    
    this.license = license;
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectLicense getLicense() {
    return license;
  }


  public void setLicense(ProjectLicense license) {
    this.license = license;
  }


  public ProjectSettings donation(ProjectDonationSettings donation) {
    
    this.donation = donation;
    return this;
  }

   /**
   * Get donation
   * @return donation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectDonationSettings getDonation() {
    return donation;
  }


  public void setDonation(ProjectDonationSettings donation) {
    this.donation = donation;
  }


  public ProjectSettings keywords(List<String> keywords) {
    
    this.keywords = keywords;
    return this;
  }

  public ProjectSettings addKeywordsItem(String keywordsItem) {
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Get keywords
   * @return keywords
  **/
  @ApiModelProperty(required = true, value = "")

  public List<String> getKeywords() {
    return keywords;
  }


  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }


  public ProjectSettings forumSync(Boolean forumSync) {
    
    this.forumSync = forumSync;
    return this;
  }

   /**
   * Get forumSync
   * @return forumSync
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getForumSync() {
    return forumSync;
  }


  public void setForumSync(Boolean forumSync) {
    this.forumSync = forumSync;
  }


  public ProjectSettings sponsors(String sponsors) {
    
    this.sponsors = sponsors;
    return this;
  }

   /**
   * Get sponsors
   * @return sponsors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSponsors() {
    return sponsors;
  }


  public void setSponsors(String sponsors) {
    this.sponsors = sponsors;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectSettings projectSettings = (ProjectSettings) o;
    return Objects.equals(this.homepage, projectSettings.homepage) &&
        Objects.equals(this.issues, projectSettings.issues) &&
        Objects.equals(this.source, projectSettings.source) &&
        Objects.equals(this.support, projectSettings.support) &&
        Objects.equals(this.wiki, projectSettings.wiki) &&
        Objects.equals(this.license, projectSettings.license) &&
        Objects.equals(this.donation, projectSettings.donation) &&
        Objects.equals(this.keywords, projectSettings.keywords) &&
        Objects.equals(this.forumSync, projectSettings.forumSync) &&
        Objects.equals(this.sponsors, projectSettings.sponsors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(homepage, issues, source, support, wiki, license, donation, keywords, forumSync, sponsors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectSettings {\n");
    sb.append("    homepage: ").append(toIndentedString(homepage)).append("\n");
    sb.append("    issues: ").append(toIndentedString(issues)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    support: ").append(toIndentedString(support)).append("\n");
    sb.append("    wiki: ").append(toIndentedString(wiki)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    donation: ").append(toIndentedString(donation)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    forumSync: ").append(toIndentedString(forumSync)).append("\n");
    sb.append("    sponsors: ").append(toIndentedString(sponsors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

