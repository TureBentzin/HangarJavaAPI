/*
 * Hangar API
 * This page describes the format for the current Hangar REST API as well as general usage guidelines.<br> Note that all routes **not** listed here should be considered **internal**, and can change at a moment's notice. **Do not use them**.  ## Authentication and Authorization There are two ways to consume the API: Authenticated or anonymous.  ### Anonymous When using anonymous authentication, you only have access to public information, but you don't need to worry about creating and storing an API key or handing JWTs.  ### Authenticated If you need access to non-public content or actions, you need to create and use API keys. These can be created by going to the API keys page via the profile dropdown or by going to your user page and clicking on the key icon.  API keys allow you to impersonate yourself, so they should be handled like passwords. **Do not share them with anyone else!**  #### Getting and Using a JWT Once you have an API key, you need to authenticate yourself: Send a `POST` request with your API key identifier to `/api/v1/authenticate?apiKey=yourKey`. The response will contain your JWT as well as an expiration time. Put this JWT into the `Authorization` header of every request and make sure to request a new JWT after the expiration time has passed.  Please also set a meaningful `User-Agent` header. This allows us to better identify loads and needs for potentially new endpoints.  ## Misc ### Date Formats Standard ISO types. Where possible, we use the [OpenAPI format modifier](https://swagger.io/docs/specification/data-models/data-types/#format).  ### Rate Limits and Caching The default rate limit is set at 20 requests every 5 seconds with an initial overdraft for extra leniency. Individual endpoints, such as version creation, may have stricter rate limiting.  If applicable, always cache responses. The Hangar API itself is cached by CloudFlare and internally.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.bentzin.hangar.api.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * Gets or Sets NamedPermission
 */
@JsonAdapter(NamedPermission.Adapter.class)
public enum NamedPermission {
  
  VIEW_PUBLIC_INFO("view_public_info"),
  
  EDIT_OWN_USER_SETTINGS("edit_own_user_settings"),
  
  EDIT_API_KEYS("edit_api_keys"),
  
  EDIT_SUBJECT_SETTINGS("edit_subject_settings"),
  
  MANAGE_SUBJECT_MEMBERS("manage_subject_members"),
  
  IS_SUBJECT_OWNER("is_subject_owner"),
  
  IS_SUBJECT_MEMBER("is_subject_member"),
  
  CREATE_PROJECT("create_project"),
  
  EDIT_PAGE("edit_page"),
  
  DELETE_PROJECT("delete_project"),
  
  CREATE_VERSION("create_version"),
  
  EDIT_VERSION("edit_version"),
  
  DELETE_VERSION("delete_version"),
  
  EDIT_CHANNELS("edit_channels"),
  
  CREATE_ORGANIZATION("create_organization"),
  
  DELETE_ORGANIZATION("delete_organization"),
  
  POST_AS_ORGANIZATION("post_as_organization"),
  
  MOD_NOTES_AND_FLAGS("mod_notes_and_flags"),
  
  SEE_HIDDEN("see_hidden"),
  
  IS_STAFF("is_staff"),
  
  REVIEWER("reviewer"),
  
  VIEW_HEALTH("view_health"),
  
  VIEW_IP("view_ip"),
  
  VIEW_STATS("view_stats"),
  
  VIEW_LOGS("view_logs"),
  
  MANUAL_VALUE_CHANGES("manual_value_changes"),
  
  RESTORE_VERSION("restore_version"),
  
  RESTORE_PROJECT("restore_project"),
  
  HARD_DELETE_PROJECT("hard_delete_project"),
  
  HARD_DELETE_VERSION("hard_delete_version"),
  
  EDIT_ALL_USER_SETTINGS("edit_all_user_settings");

  private String value;

  NamedPermission(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static NamedPermission fromValue(String value) {
    for (NamedPermission b : NamedPermission.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<NamedPermission> {
    @Override
    public void write(final JsonWriter jsonWriter, final NamedPermission enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public NamedPermission read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return NamedPermission.fromValue(value);
    }
  }
}

